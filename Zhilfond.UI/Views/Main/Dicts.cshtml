@{
    ViewBag.Title = "Жилфонд";
}
<div id="title">
    <h3>Справочники</h3>
</div>
<div id="login_info">
    <p>Текущий пользователь: <span></span></p>
</div>
<div id="total" class="div_total">
    <table style="margin-top: 0.25em;">
        <tbody>
            <tr>
                <td>
                    <table id="grid_dicts"></table>
                    <div id="pager_dicts"></div>
                </td>
                <td style="padding-right: 0px">
                    <table id="grid_dictsvalues"></table>
                    <div id="pager_dictsvalues"></div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@Styles.Render("~/Content/themes/base/css", "~/Content/css")

<link href="~/Content/themes/custom/custom.css" rel="stylesheet" type="text/css" />
<link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" type="text/css" />
<link href="~/Content/themes/base/jquery.ui.menu.css" rel="stylesheet" type="text/css" />
<link href="~/Content/themes/base/jquery.ui.datepicker.css" rel="stylesheet" type="text/css" />

@section scripts {

    <script src="~/Scripts/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui-1.10.3.js" type="text/javascript"></script>
    <script src="~/Scripts/i18n/grid.locale-en.js" type="text/javascript"></script>
    <script src="~/Scripts/carhartl/jquery.cookie.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>
    <script src="~/Scripts/global.js" type="text/javascript"></script>

    <script>

        $().ready(function () {
            showTopMenu();
            $("#login_info p span").html(getUser($.cookie('token')));
        });


        // Dicts grid
        var api_dicts = '/api/dictsapi/';

        // region
        $("#grid_dicts").jqGrid({
            url: api_dicts,
            datatype: 'json',
            mtype: 'GET',
            pager: '#pager_dicts',
            pagerpos: 'center',
            sortable: false,
            height: 601,
            width: 270,
            viewrecords: true,
            rowNum: 10000,
            colNames: ['ИД', 'Название'],
            colModel: [{ name: 'Id', index: 'Id', editable: false, width: 10, editrules: { required: true }, searchoptions: { sopt: ['cn'] } },
                       { name: 'Title', index: 'Title', editable: true, edittype: 'text', width: 120, editrules: { required: true }, searchoptions: { sopt: ['cn'] } },
            ],
            caption: "Список справочников",
            onSelectRow: function (ids) {
                var rowData = $("#grid_dicts").getRowData(ids);
                $("#grid_dictsvalues").jqGrid('setCaption', "Значения справочника: " + rowData.Title);
                $("#grid_dictsvalues").jqGrid('setGridParam', { url: api_dictsvalues + "?id_dict=" + rowData.Id }).trigger('reloadGrid');
            },
            //     autowidth: true,
            loadError: function (xhr, st, err) {
                if (xhr.status == 401) {
                    //window.location.replace("/Home/Index");
                    alert(xhr);
                }
            },
            loadComplete: function (data) {
            }
        });

        function updateDialog_dicts(action) {
            return {
                url: api_dicts
                    , closeAfterAdd: true
                    , closeAfterEdit: true
                    , afterShowForm: function (formId) { }
                    , modal: true
                    , onclickSubmit: function (params) {
                        var list = $("#grid_dicts");
                        var selectedRow = list.getGridParam("selrow");
                        rowData = list.getRowData(selectedRow);
                        params.url += rowData.Id;
                        params.mtype = action;
                    }
                    , width: "500"
            };
        }

        $("#grid_dicts").jqGrid('navGrid', '#pager_dicts',
            { add: true, edit: true, del: true, refresh: true, search: false },
             updateDialog_dicts('PUT'),
             updateDialog_dicts('POST'),
             updateDialog_dicts('DELETE'),
             {
                 onReset: function () {
                     var jqModal = true, gridid = grid[0].id;
                     $.jgrid.hideModal("#searchmodfbox_" + gridid,
                    { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
                 },
                 onSearch: function () {
                     var jqModal = true, gridid = grid[0].id;
                     $.jgrid.hideModal("#searchmodfbox_" + gridid,
                 { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
                 }
             }
         );
        $("#pager_dicts").find("#pager_dicts_center").hide();

        $("#grid_dicts").jqGrid('navGrid', '#pager_dicts', {}, {}, {}, {},
        {
            onReset: function () {
                var jqModal = true, gridid = grid[0].id;
                $.jgrid.hideModal("#searchmodfbox_" + gridid,
                    { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
            }
        });

        // DictsValues grid
        var api_dictsvalues = '/api/dictsvaluesapi/';

        // region
        $("#grid_dictsvalues").jqGrid({
            url: api_dictsvalues,
            datatype: 'json',
            mtype: 'GET',
            pager: '#pager_dictsvalues',
            pagerpos: 'center',
            sortable: false,
            height: 580,
            width: 953,
            viewrecords: true,
            rowList: [100, 1000, 5000],
            rowNum: 100,
            colNames: ['ИД', 'Значение'],
            colModel: [{ name: 'Id', index: 'Id', editable: false, width: 10, editrules: { required: true }, searchoptions: { sopt: ['cn'] } },
                       { name: 'Value', index: 'Value', editable: true, edittype: 'text', width: 120, editrules: { required: true }, searchoptions: { sopt: ['cn'] } },
            ],
            caption: "Значения справочника",
            onSelectRow: function (ids) {
            },
            //     autowidth: true,
            loadError: function (xhr, st, err) {
                if (xhr.status == 401) {
                    //window.location.replace("/Home/Index");
                    alert(xhr);
                }
            },
            loadComplete: function (data) {
            }
        });

        function updateDialog_dictsvalues(action) {
            return {
                url: api_dictsvalues
                    , closeAfterAdd: true
                    , closeAfterEdit: true
                    , afterShowForm: function (dictId) { }
                    , modal: true
                    , onclickSubmit: function (params) {
                        var list = $("#grid_dictsvalues");
                        var selectedRow = list.getGridParam("selrow");
                        rowData = list.getRowData(selectedRow);

                        var gdicts = $("#grid_dicts");
                        var dictsrow = gdicts.getGridParam("selrow");
                        var dictsrowData = gdicts.getRowData(dictsrow);

                        params.url += rowData.Id + "?id_dict=" + dictsrowData.Id;
                        params.mtype = action;
                    }
                    , width: "500"
            };
        }

        $("#grid_dictsvalues").jqGrid('navGrid', '#pager_dictsvalues',
            { add: true, edit: true, del: true, refresh: true, search: false },
             updateDialog_dictsvalues('PUT'),
             updateDialog_dictsvalues('POST'),
             updateDialog_dictsvalues('DELETE'),
             {
                 onReset: function () {
                     var jqModal = true, gridid = grid[0].id;
                     $.jgrid.hideModal("#searchmodfbox_" + gridid,
                    { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
                 },
                 onSearch: function () {
                     var jqModal = true, gridid = grid[0].id;
                     $.jgrid.hideModal("#searchmodfbox_" + gridid,
                 { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
                 }
             }
         );
        //  $("#pager_dictsvalues").find("#pager_dictsvalues_center").hide();

        $("#grid_dictsvalues").jqGrid('navGrid', '#pager_dictsvalues', {}, {}, {}, {},
        {
            onReset: function () {
                var jqModal = true, gridid = grid[0].id;
                $.jgrid.hideModal("#searchmodfbox_" + gridid,
                    { gb: "#gbox_" + gridid, jqm: jqModal, onClose: null });
            }
        });


        $("#grid_dictsvalues").jqGrid('filterToolbar');

    </script>

}

